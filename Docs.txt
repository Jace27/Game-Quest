Класс GameField
	Игровое поле. Состоит из блоков, которые строят вторую координатную сетку. В блочных координатах работают массивы собственно блоков (а вместе с ними - игровых объектов) и тумана войны.
	
	Инициализация:
		GameField = new GameField(string Location, bool Fog, Graphics Graphics);
			Location может принимать любые значения, главное чтобы в \Resources\Locations присутствовали соответствующие данные.
			Fog может принимать следующие значения:
				true - туман войны есть
				false - тумана войны нет
			Graphics - объект графики, на котором отрисовывается игровое поле.
	
	Свойства:
		Тип				Имя				По умолчанию	Инициализация	Описание
		Graphics 		Graphics		null 			Обязательно		Объект графики, на котором будет отрисовываться поле.
		Player			Player			null			Обязательно		Экземпляр игрока. Необходим для метода Draw().
		string 			Location						Автоматически	Имя рисуемой локации.
		Block[,] 		Field							Автоматически	Массив блоков.
		bool 			IsFogged						Автоматически	Включен ли туман войны (только чтение, т.к. для новой локации поле требуется пересоздать).
		bool[,] 		Fog								Автоматически	Массив, хранящий информацию о том, какие блоки игрок открыл, а какие еще нет. true - блок затуманен.
		Size 			Size			30x20			По умолчанию	Размер поля в блоках.
		Point 			Zero			0:0				По умолчанию	Позиция верхнего левого угла поля в пикселях (чтобы можно было перемещать поле по форме).
		Size 			BlockSize		30x30			По умолчанию	Размер блока в пикселях.
		GameObject[]	Objects							Автоматически	Массив объектов на карте. При изменении автоматически изменяет объекты в массиве Field.
	
	Методы:
		void Draw(Player player)		Отрисовывает местность, объекты и игрока. Максимально быстр, рекомендуется для события Paint
			player - игрок на отрисовку
		void DrawBlock(Point point)		Отрисовывает один конкретный блок по переданным координатам
			point - координаты (в блоках)
		void DrawDownloadScreen(string Text, Color ForeColor, Color BackColor)		Отрисовывает экран загрузки
			Text 		- текст для отображения на экране загрузки
			ForeColor 	- цвет текста
			BackColor 	- цвет фона
		Атавизмы (бесполезны, но не мешаются):
		void DrawField()		Отрисовывает фоновые спрайты, местность
		void DrawFog()			Отрисовывает туман войны
		void DrawObjects()		Отрисовывает объекты в локации
		void Dispose()			Освобождает используемые ресурсы, в частности ресурсы объекта графики
	
	При конструировании объекта GameField данные о создаваемой локации читаются из файлов.
	Файлы:
		{имя локации}
			Содержит кодировку расположения фоновых спрайтов. Если считан не прямоугольный массив, то кидается исключение.
			GameField.Size устанавливается после чтения исходя из размеров этого массива.
			Формат: коды отдельных спрайтов разделены знаками табуляции; 
					знаков табуляции может быть любое кол-во, в массив заносятся только коды спрайтов;
					на каждой строке должно быть одинаковое кол-во кодов;
					пустые строки допускаются, т.к. не читаются;
					кол-во кодов в строке = ширина игрового поля;
					кол-во непустых строк = высота игрового поля;
					перечисление кодов спрайтов смотри в файле List of sprites.txt
		
		{имя локации}Objects
			Содержит информацию о расположении объектов на локации.
			Формат: {координата X (столбец)}:{координата Y (строка)} {ID} {кол-во} [{тип}|{Название}|{Описание}]
					на каждой строке один объект;
					Id не должен содержать пробелов;
					если кол-во объектов указано меньше единицы, то объект уничтожается;
					пустые строки допускаются, т.к. не читаются;
					в типе, названии и описании допускаются пробелы, т.к. основным разделителем для них является знак '|';
					тип, название и описание могут быть не указаны;
					если тип = item, значит объект может быть взят игроком;
					если нет ни типа, ни названия, но есть описание, то оно будет прочитано как название;
					ID используется как имя спрайта в \Resources\Sprites
					
		{имя локации}Passable
			Содержит информацию о физике блоков.
			Формат: длина всех строк должна совпадать с шириной игрового поля;
					кол-во непустых строк должно совпадать с высотой игрового поля;
					пустые строки допускаются, т.к. не читаются;
					буква H означает непроходимый блок, любой другой символ читается как проходимый

Класс Player
	Игрок.
	
	Инициализация:
		Player Player = new Player();
	
	Свойства:
		Тип				Имя					По умолчанию	Инициализация	Описание
		GameField		GameField			null			Обязательно		Поле, на котором находится игрок. Обязательно передать перед отрисовкой!
		PlayerLocation	PlayerLocation		0:0				Обязательно		Позиция на поле.
		Inventory		Inventory							Автоматически	Инвентарь.
		Image			Sprite				null.png		По умолчанию	Спрайт.
		int				View				2				По умолчанию	Радиус обзора.
		int				MoveAnimationTime	150				По умолчанию	Время, за которое персонаж проходит 1 блок. Должно быть кратно кол-ву кадров движения!
		int				MoveAnimationFrames	20				По умолчанию	Кол-во кадров анимации движения. Не рекомендуется ставить значение, не кратное 5, а также значение, которому не кратны MoveAnimationTime и BlockSize.
	
	Методы:
		void DrawPlayer()							Отрисовать игрока.
		void PickUpItem()							Поднять предмет, на котором игрок стоит, если этот предмет можно поднять.
		void MovePlayer(string direction)			Простое движение (телепортация на 1 блок).
			direction - направление движения
				left
				up
				right
				down
		void SmoothlyMovePlayer(string direction)	Анимированное движение
			direction - направление движения
				left
				up
				right
				down
	
	События:
		onStepUpItem(GameObject item) - происходит когда персонаж встает на любой объект.
		onPickUpItem(GameObject item) - происходит при поднятии предмета.

Класс InGameLocation
	Позиция игрока. Нужен из-за двух систем координат в игре - блоковой и пиксельной. Автоматически синхронизирует значение координат.
	
	Инициализация:
		InGameLocation Location = InGameLocation(Point location, Size BlockSize);
			location  - позиция на поле в блоках.
			BlockSize - размер блока в пикселях. Нужен для синхронизации координат в пикселях и в блоках.
	
	Свойства:
		Тип				Имя		По умолчанию	Описание
		Point			PX		0:0				Координаты в пикселях.
		Point			BL		0:0				Координаты в блоках.

Класс Inventory
	Инвентарь.
	
	Инициализация:
		Автоматически при инициализации игрока.
	
	Свойства:
		Тип				Имя		По умолчанию	Описание
		int				Money	0				Деньги.
		GameObject[]	Items	GameObject[0]	Массив игровых объектов, отражающий предметы в инвентаре.
	
	Методы:
		void AddItem(GameObject item);
			item 		- добавляемый объект.
		void DeleteItem(string itemName); - удаляет предмет из инвентаря по имени или ID
			itemName 	- имя или ID удаляемого предмета.
		void DeleteItem(string item, int count); - удаляет ограниченное кол-во предметов заданного типа
			itemName 	- имя или ID удаляемого предмета.
			count 		- кол-во предметов на удаление.
		bool FindItemB(string itemName); - проверяет наличие предмета в инвентаре по имени или ID
			itemName 	- имя или ID искомого предмета.
		int FindItemI(string item); - возвращает кол-во предметов искомого типа в инвентаре. если ничего не найдено, возвращается -1.
			item		- имя или ID искомого предмета.
		GameObject FindItemG(string item); - возвращает искомый предмет целиком. если ничего не найдено, возвращается null.
			item		- имя или ID искомого предмета.

Класс Block
	Блок поля.
	
	Свойства:
		Тип			Имя			По умолчанию	Описание
		Image		Background	null			Фон блока (спрайт местности).
		GameObject	Object		null			Объект, лежащий на данном блоке.
		bool		Passable	false			Физика. true - блок непроходим.

Класс GameObject
	Игровой объект. Если лежит на поле, то рисуется вторым слоем поверх фона (местности).
	
	Инициализация:
		GameObject Object = new GameObject(string id);
	
	Свойства:
		Тип			Имя			По умолчанию	Описание
		string		Id							Идентификатор.
		string		Name						Имя на русском.
		string		Description					Описание на русском.
		bool		PickUpAble	false			Может ли игрок взять предмет в инвентарь.
		int			Count		1				Кол-во в одной пачке. 
		Image		Background	Id+".png"		Изображение объекта.